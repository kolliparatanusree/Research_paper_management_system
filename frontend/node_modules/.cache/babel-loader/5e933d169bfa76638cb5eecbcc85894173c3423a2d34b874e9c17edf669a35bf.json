{"ast":null,"code":"// // src/components/UIDStatusList.js\n// import React, { useEffect, useState } from 'react';\n// import './FacultyDashboard.css';\n\n// export default function UIDStatusList({ facultyId }) {\n//   const [allRequests, setAllRequests] = useState([]);\n//   const [rejectedRequests, setRejectedRequests] = useState([]);\n//   const [filter, setFilter] = useState('approved'); // 'approved' | 'pending' | 'rejected'\n\n//   useEffect(() => {\n//     const fetchData = async () => {\n//       try {\n//         const res = await fetch('http://localhost:5000/api/hod/uid-requests');\n//         const data = await res.json();\n//         setAllRequests(data.filter(req => req.facultyId === facultyId));\n\n//         const rejRes = await fetch(`http://localhost:5000/api/faculty/rejected-uids/${facultyId}`);\n//         const rejectedData = await rejRes.json();\n//         setRejectedRequests(rejectedData);\n//       } catch (err) {\n//         console.error('Error fetching UID status:', err);\n//       }\n//     };\n\n//     fetchData();\n//   }, [facultyId]);\n\n//   const filteredRequests = () => {\n//     if (filter === 'approved') {\n//       return allRequests.filter(req => req.hodAccept && req.principalAccept && req.adminAccept && req.uid);\n//     }\n//     if (filter === 'pending') {\n//       return allRequests.filter(req =>\n//         !(req.hodAccept && req.principalAccept && req.adminAccept && req.uid)\n//       );\n//     }\n//     if (filter === 'rejected') {\n//       return rejectedRequests;\n//     }\n//     return [];\n//   };\n\n//   return (\n//     <div>\n//       <div className=\"filter-buttons\">\n//         <button onClick={() => setFilter('approved')} className={filter === 'approved' ? 'active' : ''}>Approved UIDs</button>\n//         <button onClick={() => setFilter('pending')} className={filter === 'pending' ? 'active' : ''}>Pending UIDs</button>\n//         <button onClick={() => setFilter('rejected')} className={filter === 'rejected' ? 'active' : ''}>Rejected UIDs</button>\n//       </div>\n\n//       <div className=\"uid-status-list\">\n//         {filteredRequests().length === 0 ? (\n//           <p>No {filter} requests found.</p>\n//         ) : (\n//           filteredRequests().map(req => (\n//             <div key={req._id} className=\"uid-status-card\">\n//               <h4>{req.paperTitle}</h4>\n//               <p><strong>Type:</strong> {req.type}</p>\n//               <p><strong>Target:</strong> {req.target}</p>\n//               <p><strong>Submitted:</strong> {new Date(req.submittedAt).toLocaleDateString()}</p>\n//               {req.uid && <p><strong>UID:</strong> {req.uid}</p>}\n//               {filter === 'rejected' && <p style={{ color: 'red' }}><strong>Reason:</strong> Request rejected</p>}\n//             </div>\n//           ))\n//         )}\n//       </div>\n//     </div>\n//   );\n// }","map":{"version":3,"names":[],"sources":["C:/Users/laksh/OneDrive/Documents/Research_paper_management_system/frontend/src/components/UIDStatusList.js"],"sourcesContent":["// // src/components/UIDStatusList.js\r\n// import React, { useEffect, useState } from 'react';\r\n// import './FacultyDashboard.css';\r\n\r\n// export default function UIDStatusList({ facultyId }) {\r\n//   const [allRequests, setAllRequests] = useState([]);\r\n//   const [rejectedRequests, setRejectedRequests] = useState([]);\r\n//   const [filter, setFilter] = useState('approved'); // 'approved' | 'pending' | 'rejected'\r\n\r\n//   useEffect(() => {\r\n//     const fetchData = async () => {\r\n//       try {\r\n//         const res = await fetch('http://localhost:5000/api/hod/uid-requests');\r\n//         const data = await res.json();\r\n//         setAllRequests(data.filter(req => req.facultyId === facultyId));\r\n\r\n//         const rejRes = await fetch(`http://localhost:5000/api/faculty/rejected-uids/${facultyId}`);\r\n//         const rejectedData = await rejRes.json();\r\n//         setRejectedRequests(rejectedData);\r\n//       } catch (err) {\r\n//         console.error('Error fetching UID status:', err);\r\n//       }\r\n//     };\r\n\r\n//     fetchData();\r\n//   }, [facultyId]);\r\n\r\n//   const filteredRequests = () => {\r\n//     if (filter === 'approved') {\r\n//       return allRequests.filter(req => req.hodAccept && req.principalAccept && req.adminAccept && req.uid);\r\n//     }\r\n//     if (filter === 'pending') {\r\n//       return allRequests.filter(req =>\r\n//         !(req.hodAccept && req.principalAccept && req.adminAccept && req.uid)\r\n//       );\r\n//     }\r\n//     if (filter === 'rejected') {\r\n//       return rejectedRequests;\r\n//     }\r\n//     return [];\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <div className=\"filter-buttons\">\r\n//         <button onClick={() => setFilter('approved')} className={filter === 'approved' ? 'active' : ''}>Approved UIDs</button>\r\n//         <button onClick={() => setFilter('pending')} className={filter === 'pending' ? 'active' : ''}>Pending UIDs</button>\r\n//         <button onClick={() => setFilter('rejected')} className={filter === 'rejected' ? 'active' : ''}>Rejected UIDs</button>\r\n//       </div>\r\n\r\n//       <div className=\"uid-status-list\">\r\n//         {filteredRequests().length === 0 ? (\r\n//           <p>No {filter} requests found.</p>\r\n//         ) : (\r\n//           filteredRequests().map(req => (\r\n//             <div key={req._id} className=\"uid-status-card\">\r\n//               <h4>{req.paperTitle}</h4>\r\n//               <p><strong>Type:</strong> {req.type}</p>\r\n//               <p><strong>Target:</strong> {req.target}</p>\r\n//               <p><strong>Submitted:</strong> {new Date(req.submittedAt).toLocaleDateString()}</p>\r\n//               {req.uid && <p><strong>UID:</strong> {req.uid}</p>}\r\n//               {filter === 'rejected' && <p style={{ color: 'red' }}><strong>Reason:</strong> Request rejected</p>}\r\n//             </div>\r\n//           ))\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}